{"version":3,"sources":["../../src/find/QFind.js"],"names":[],"mappings":";;;;;;;;;;;IAAqB,KAAK;AACX,aADM,KAAK,CACV,OAAO,EAAE;8BADJ,KAAK;;AAElB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;AACrB,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;;iBALgB,KAAK;;;;;iCAOf,iBAAC,MAAM,EAAE;AACZ,gBAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACtC;;;;;;gCAEK,gBAAC,KAAK,EAAE;AACV,gBAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,mBAAO,IAAI,CAAC;SACf;;;;;;gCAEI,eAAC,KAAK,EAAE;AACT,gBAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9B,mBAAO,IAAI,CAAC;SACf;;;;;;gCAEI,eAAC,KAAK,EAAE;AACT,gBAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,mBAAO,IAAI,CAAC;SACf;;;;;;gCAEG,cAAC,KAAK,EAAE;AACR,gBAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,mBAAO,IAAI,CAAC;SACf;;;;;;gCAEI,eAAC,KAAK,EAAE;AACT,gBAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,mBAAO,IAAI,CAAC;SACf;;;;;qCAEQ,qBAAG;AACR,gBAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B,mBAAO,IAAI,CAAC;SACf;;;;;kCAEK,kBAAG;;;AACL,mBAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,cAAc,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CACzE,IAAI,CAAC,YAAM;AACR,uBAAO,MAAK,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAK,MAAM,EAAE,MAAK,OAAO,CAAC,CAAC;aAC/D,CAAC,CAAC;SACV;;;WA9CgB,KAAK;;;kBAAL,KAAK","file":"QFind.js","sourcesContent":["export default class QFind {\n    constructor(manager) {\n        this.manager = manager;\n        this.VO = manager.VO;\n        this.options = {};\n    }\n\n    toModel(result) {\n        this.manager.store.toModel(result);\n    }\n\n    fields(value) {\n        this.options.fields = value;\n        return this;\n    }\n\n    field(value) {\n        this.options.fields = [value];\n        return this;\n    }\n\n    query(value) {\n        this._query = value;\n        return this;\n    }\n\n    sort(value) {\n        this.options.sort = value;\n        return this;\n    }\n\n    limit(value) {\n        this.options.limit = value;\n        return this;\n    }\n\n    notimeout() {\n        this.options.timeout = false;\n        return this;\n    }\n\n    cursor() {\n        return this.manager.executeHooks(['beforeFind', 'beforeCursor'], this.options)\n            .then(() => {\n                return this.manager.store.cursor(this._query, this.options);\n            });\n    }\n}\n"]}